单例模式：
添加静态private自己类
getInstance静态公有函数获得它
在Start()函数里写instance = this;

数据类型：
ParticleEmitter		粒子系统
Transform		位置相关
Rigidbody		刚体
Vector3			表示前后上方向，如Vector3.forward表示向前


常用的游戏对象中的变量：
velocity			速度
transform.position		位置
transform.rotation		旋转
transform.rotation.eulerAngles	欧拉角度，对应的是可视界面上的角度


常用函数：
Input.GetKeyDown(KeyCode.Return)	//按下回车键
Input.GetKey(KeyCode.Return)		//按住回车键
！！前面2个函数在跨平台的时候不能用，推荐使用下面这种函数
Input.GetButton("Jump")			//按下跳键，PC机默认是空格
Input.GetAxis ("Vertical") 		//获得垂直轴力度，按下w键或者↑会到1，按下s键或↓会到-1
Instantiate				//复制游戏对象（但是必须是perfab）
Destroy(gameObject)			//销毁当前脚本所附在的游戏对象，切记，不能删除其他的游戏对象，否则出错
yield WaitForSeconds (3)		//等待3秒钟，参数是float的
transform.Translate(Vector3.forward * Time.deltaTime)	//Vector只能乘以float，不能是double，若自己写个小数必须写成0.01f这样的

常用事件：
function OnCollisionEnter(collision : Collision) {}	//进入碰撞区域
OnMouseDown()	//鼠标点击事件，将这个写在脚本中，再拖动到想要响应点击事件的对象上，则可以实现对鼠标点击事件的响应

GUI部分：
	固定贴图：使用GUITexture控件，图片拖拽上去，再在面板中调整图片大小、位置等
	动态生成图：
GUI.Window函数创建窗口，GUILayout.Label在创建的窗口上面画东西或者写东西
GUI.skin指定对话框皮肤，皮肤是在Project中右键Create选择GUI Skin创建的（指定skin之后默认的皮肤就会消失）
	其他：
OnGUI函数是重绘GUI必定执行的，绘制窗口必须在这里执行
GUI.skin是设置窗口的皮肤
GUI.Window是显示窗口，显示的窗口是在skin里设置的，包括贴图什么的
GUI Skin是在Project中右键新建GUI Skin创建的，之后在脚本里写一个public GUISkin skin;再将创建的这个skin拖动上去就好了
最重要：GUILayout.Label可以在这个窗口的相对位置打字
GUILayout.BeginVertical();后面写的都是在这一行
GUILayout.BeginHorizontal();后面一次写一行
GUILayout.EndHorizontal();结束一次写一行这种方式
GUILayout.Space(5);空5格

其他：
1、如果用cube套着一个子弹作为perfab，且在作为perfab之前Mesh Render没取消，那么取消之后必须更新perfab才会起作用（切记，复制的物体属性和perfab是一样的）
2、使用另一个GameObject中的script定义的变量
objectA = GameObject.find("ObjectA")
var script : ScriptName = objectA.GetComponent(ScriptName);
3、GUI.depth用在OnGUI函数中，在绘制之前确定要绘制的深度
4、Vector3 dir = Vector3.Lerp(transform.position, target.transform.position, Time.deltaTime * moveSpeed);可以使得一个物体从某一位置移动到另一位置，并且速度会变慢
5、枚举类型的定义要放在类的外面才可以被其他类访问到，否则即使用了public也是白搭
6、淡入淡出效果：每次绘制一幅黑色的图，alpha值会变而已，具体见地震demo项目